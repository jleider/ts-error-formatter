// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`errorFormatter should format types 1`] = `
"Type '[91m[91m{ id: number; email: string; firstName: string; lastName: string; phoneNumber: Option<never>; phoneExtension: Option<never>; company: Option<never>; title: Option<never>; linkedinUrl: Option<never>; twitterUrl: Option<never>; facebookUrl: Option<never>; primaryClientId: number; subscribed: false; personaId: Option<never>; }[39m[91m[39m' is not assignable to type '[32m{ id: number; email: string; firstName: string; lastName: string; phoneNumber: Option<string>; phoneExtension: Option<string>; company: Option<string>; title: Option<string>; linkedinUrl: Option<string>; twitterUrl: Option<string>; facebookUrl: Option<string>; primaryClientId: number; activeCampaignId: Option<string>; personaId: Option<number>; }[39m'.
  Object literal may only specify known properties, and '[91m[91msubscribed[39m[91m[39m' does not exist in type '[32m{ id: number; email: string; firstName: string; lastName: string; phoneNumber: Option<string>; phoneExtension: Option<string>; company: Option<string>; title: Option<string>; linkedinUrl: Option<string>; twitterUrl: Option<string>; facebookUrl: Option<string>; primaryClientId: number; activeCampaignId: Option<string>; personaId: Option<number>; }[39m'."
`;

exports[`errorFormatter should format types 2`] = `
"Type '[91m[91m{ mySiteItems: Parser<PageMeta<{}>>; mySiteOffering: Parser<PageMeta<{}>>; mySiteItemsRatings: Parser<PageMeta<{}>>; mySiteItemsRoadshows: Parser<PageMeta<{}>>; mySiteDocuments: Parser<PageMeta<{ page?: number | undefined; search?: string | undefined; category?: number | undefined; sortBy?: \\"title-asc\\" | \\"category-asc\\" | \\"date-asc\\" | \\"date-desc\\" | undefined; emma?: \\"all\\" | \\"emmaOnly\\" | \\"excludeEmma\\" | undefined; archive?: \\"all\\" | \\"archiveOnly\\" | \\"excludeArchive\\" | undefined; privacy?: \\"all\\" | \\"public\\" | \\"private\\" | undefined; }>>; mySiteDocumentsCategories: Parser<PageMeta<{}>>; mySiteDocumentsLetter: Parser<PageMeta<{}>>; mySiteChangeApproval: Parser<PageMeta<{}>>; tipsAndToolsPersonalizedTips: Parser<any>; tipsAndToolsBestPractices: Parser<any>; tipsAndToolsUserGuides: Parser<any>; analyticsDocumentStatistics: Parser<any>; analyticsSiteActivity: Parser<any>; analyticsDocumentStatisticsDocumentActivity: Parser<any>; analyticsUserActivity: Parser<any>; analyticsUserActivityDetails: Parser<any>; analyticsDebriefs: Parser<any>; Insights: Parser<PageMeta<{ id: number; } & { preview: boolean; }>>; InsightsQuery: Parser<PageMeta<{ page?: number | undefined; publisher?: number | undefined; }>>; dashboard: Parser<PageMeta<{}>>; }[39m[91m[39m' is not assignable to type '[32m{ readonly dashboard: Parser<PageMeta<unknown>>; readonly analyticsDocumentStatistics: Parser<PageMeta<unknown>>; readonly analyticsDocumentStatisticsDocumentActivity: Parser<PageMeta<unknown>>; readonly analyticsDebriefs: Parser<PageMeta<unknown>>; readonly analyticsSiteActivity: Parser<PageMeta<unknown>>; readonly analyticsUserActivity: Parser<PageMeta<unknown>>; readonly analyticsUserActivityDetails: Parser<PageMeta<unknown>>; readonly Insights: Parser<PageMeta<unknown>>; readonly mySiteItems: Parser<PageMeta<unknown>>; readonly mySiteOffering: Parser<PageMeta<unknown>>; readonly mySiteItemsRatings: Parser<PageMeta<unknown>>; readonly mySiteItemsRoadshows: Parser<PageMeta<unknown>>; readonly mySiteChangeApproval: Parser<PageMeta<unknown>>; readonly mySiteDocuments: Parser<PageMeta<unknown>>; readonly mySiteDocumentsCategories: Parser<PageMeta<unknown>>; readonly mySiteDocumentsLetter: Parser<PageMeta<unknown>>; readonly tipsAndToolsBestPractices: Parser<PageMeta<unknown>>; readonly tipsAndToolsPersonalizedTips: Parser<PageMeta<unknown>>; readonly tipsAndToolsUserGuides: Parser<PageMeta<unknown>>; }[39m'.
  Types of property '[91mdashboard[39m' are incompatible.
    Type '[91m[91mParser<PageMeta<{}>>[39m[91m[39m' is not assignable to type '[32mParser<PageMeta<unknown>>[39m'.
      Type '[91m[91mPageMeta<{}>[39m[91m[39m' is not assignable to type '[32mPageMeta<unknown>[39m'.
        Type '[91m[91mPageMeta<{}>[39m[91m[39m' is not assignable to type '[32m{ readonly description: () => Option<string>; readonly renderEquality: (next: PageMeta<unknown>, current: PageMeta<unknown>) => boolean; readonly dataMeta: Option<DataMetaBase<string>>; readonly route: Match<unknown>; }[39m'.
          Types of property '[91mrenderEquality[39m' are incompatible.
            Type '[91m[91m(next: PageMeta<{}>, current: PageMeta<{}>) => boolean[39m[91m[39m' is not assignable to type '[32m(next: PageMeta<unknown>, current: PageMeta<unknown>) => boolean[39m'.
              Types of parameters '[91mnext[39m' and '[91m[32mnext[39m[91m[39m' are incompatible.
                Type '[91m[91mPageMeta<unknown>[39m[91m[39m' is not assignable to type '[32mPageMeta<{}>[39m'.
                  Type '[91m[91mPageMeta<unknown>[39m[91m[39m' is not assignable to type '[32m{ readonly description: () => Option<string>; readonly renderEquality: (next: PageMeta<{}>, current: PageMeta<{}>) => boolean; readonly dataMeta: Option<DataMetaBase<string>>; readonly route: Match<{}>; }[39m'.
                    The types of '[91mroute.parser[39m' are incompatible between these types.
                      Type '[91m[91mParser<unknown>[39m[91m[39m' is not assignable to type '[32mParser<{}>[39m'.
                        Type '[91m[91munknown[39m[91m[39m' is not assignable to type '[32m{}[39m'."
`;

exports[`errorFormatter should format types 3`] = `
"Type '[91m[91m{ id: number; email: string; firstName: string; lastName: string; phoneNumber: Option<never>; phoneExtension: Option<never>; company: Option<never>; title: Option<never>; linkedinUrl: Option<never>; twitterUrl: Option<never>; facebookUrl: Option<never>; primaryClientId: number; subscribed: false; personaId: Option<never>; }[39m[91m[39m' is not assignable to type '[32m{ id: number; email: string; firstName: string; lastName: string; phoneNumber: Option<string>; phoneExtension: Option<string>; company: Option<string>; title: Option<string>; linkedinUrl: Option<string>; twitterUrl: Option<string>; facebookUrl: Option<string>; primaryClientId: number; activeCampaignId: Option<string>; personaId: Option<number>; }[39m'.
    Object literal may only specify known properties, and '[91m[91msubscribed[39m[91m[39m' does not exist in type '[32m{ id: number; email: string; firstName: string; lastName: string; phoneNumber: Option<string>; phoneExtension: Option<string>; company: Option<string>; title: Option<string>; linkedinUrl: Option<string>; twitterUrl: Option<string>; facebookUrl: Option<string>; primaryClientId: number; activeCampaignId: Option<string>; personaId: Option<number>; }[39m'.

  Type '[91m[91mCodec<Option<number>, Option<number> | null | undefined>[39m[91m[39m' is not assignable to type '[32mCodec<number, number | null | undefined>[39m'.
    The types returned by '[91mdecode(...)[39m' are incompatible between these types.
      Type '[91m[91mValidation<Option<number>>[39m[91m[39m' is not assignable to type '[32mValidation<number>[39m'.
        Type '[91m[91mRight<Option<number>>[39m[91m[39m' is not assignable to type '[32mValidation<number>[39m'.
          Type '[91m[91mRight<Option<number>>[39m[91m[39m' is not assignable to type '[32mRight<number>[39m'.
            Type '[91m[91mOption<number>[39m[91m[39m' is not assignable to type '[32mnumber[39m'.
              Type '[91m[91mNone[39m[91m[39m' is not assignable to type '[32mnumber[39m'."
`;

exports[`errorFormatter should format types 4`] = `"Type '[91m{ curr: string; }[39m' is missing the following properties from type '[32mColorContent[39m': type, val"`;

exports[`errorFormatter should format types 5`] = `"The type '[91mreadonly [Element, Element][39m' is '[91m[91m[91mreadonly[39m[91m[91m[39m[91m[39m' and cannot be assigned to the mutable type '[32m[32m[left: ReactElement<any, string | JSXElementConstructor<any>>, right: ReactElement<any, string | JSXElementConstructor<any>>][39m[32m[39m'."`;
